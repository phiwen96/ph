digraph structs 
{
	bgcolor=red;
	compound=true;
	ratio=fill;
	fill=true;
	graph [dpi = 1000 bgcolor=black fontcolor=white color=white];
	node [dpi = 1000 bgcolor=black fillcolor=black style=filled color=white fontcolor=white];
	edge [dpi = 1000 bgcolor=black color=white fontcolor=white];


	AI [shape = record, label = "{AI}"]

	Assert [shape = record, label = "{Assert}"]


	"Bidirectional iterator" [shape = record, label = "{Bidirectional iterator}"]


	Bool [shape = record, label = "{Bool}"]

	"Bool" -> Convertible_to [shape = record, label = "  imports"]
	"Bool" -> Assert [shape = record, label = "  imports"]


	Const [shape = record, label = "{Const}"]	


	Convertible_to [shape = record, label = "{Convertible to}"]


	Decrementable [shape = record, label = "{Decrementable}"]


	Dereferenceable [shape = record, label = "{Dereferenceable}"]


	Float [shape = record, label = "{Float}"]

	"Forward iterator" [shape = record, label = "{Forward iterator}"]


	Integer [shape = record, label = "{Integer}"]

	"Integer" -> Convertible_to [shape = record, label = "  imports"]
	"Integer" -> Assert [shape = record, label = "  imports"]
	

	Iterator [shape = record, label = "{Iterator}"]

	"Iterator" -> "Input iterator" [shape = record, label = "  exports"]
	"Iterator" -> "Output iterator" [shape = record, label = "  exports"]
	"Iterator" -> "Forward iterator" [shape = record, label = "  exports"]
	"Iterator" -> "Bidirectional iterator" [shape = record, label = "  exports"]
	"Iterator" -> "Random access iterator" [shape = record, label = "  exports"]
	"Iterator" -> Const [shape = record, label = "  imports"]
	"Iterator" -> Pointer [shape = record, label = "  exports"]
	"Iterator" -> Size [shape = record, label = "  exports"]
	"Iterator" -> Reference [shape = record, label = "  imports"]


	Incrementable [shape = record, label = "{Incrementable}"]

	Incrementable -> "Prefix incrementable" [shape = record, label = "  exports"]
	Incrementable -> "Prefix decrementable" [shape = record, label = "  exports"]
	Incrementable -> "Postfix incrementable" [shape = record, label = "  exports"]
	Incrementable -> "Postfix decrementable" [shape = record, label = "  exports"]


	"Input iterator" [shape = record, label = "{{Input iterator}|{next (Input iterator) - Input iterator}|{read (Input iterator) - Reference}}"]

	"Input iterator" -> Incrementable [shape = record, label = "  imports"]
	"Input iterator" -> Dereferenceable [shape = record, label = "  imports"]


	Nothing [shape = record, label = "{Nothing}"]


	Number [shape = record, label = "{Number}"]

	"Number" -> Assert [shape = record, label = "  imports"]
	"Number" -> "Signed" [shape = record, label = "  exports"]
	"Number" -> "Unsigned" [shape = record, label = "  exports"]
	"Number" -> "Integer" [shape = record, label = "  exports"]
	"Number" -> "Float" [shape = record, label = "  exports"]


	"Output iterator" [shape = record, label = "{Output iterator |{}|{next (Output iterator) - Output iterator}|{write (Output iterator i, element of \<i\> ) - Nothing}|{element_of \<Output iterator\> - Something}}"]

	"Output iterator" -> Incrementable [shape = record, label = "  imports"]
	"Output iterator" -> Dereferenceable [shape = record, label = "  imports"]
	"Output iterator" -> Nothing [shape = record, label = "  imports"]


	Pointer [shape = record, label = "{Pointer}"]

	"Postfix incrementable" [shape = record, label = "{Postfix incrementable}"]

	"Postfix decrementable" [shape = record, label = "{Postfix decrementable}"]


	"Prefix incrementable" [shape = record, label = "{Prefix incrementable}"]

	"Prefix incrementable" -> Reference [shape = record, label = "  imports"]	


	"Prefix decrementable" [shape = record, label = "{Prefix decrementable}"]

	"Prefix decrementable" -> Reference [shape = record, label = "  imports"]


	"Random access iterator" [shape = record, label = "{Random access iterator}"]


	Range [shape = record, label = "{Range |{contains (Range) - Bool}}"]

	"Range" -> Bool [shape = record, label = "  exports"]
	"Range" -> Iterator [shape = record, label = "  exports"]
	"Range" -> Pointer [shape = record, label = "  imports"]
	"Range" -> Size [shape = record, label = "  exports"]


	Reference [shape = record, label = "{Reference}"]


	Referenceable [shape = record, label = "{Referenceable}"]	


	Signed [shape = record, label = "{Signed}"]

	"Signed" -> Convertible_to [shape = record, label = "  imports"]
	"Signed" -> Assert [shape = record, label = "  imports"]


	Size [shape = record, label = "{Size}"]


	Unsigned [shape = record, label = "{Unsigned}"]

	"Unsigned" -> Convertible_to [shape = record, label = "  imports"]
	"Unsigned" -> Assert [shape = record, label = "  imports"]





















	


	"Float" -> Convertible_to [shape = record, label = "  imports"]
	"Float" -> Assert [shape = record, label = "  imports"]
}


