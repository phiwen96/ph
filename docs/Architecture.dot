digraph structs 
{
	bgcolor=red;
	compound=true;
	ratio=fill;
	fill=true;
	graph [dpi = 1000 bgcolor=black fontcolor=white color=white];
	node [dpi = 1000 bgcolor=black fillcolor=black style=filled color=white fontcolor=white];
	edge [dpi = 1000 bgcolor=black color=white fontcolor=white];

	// Ph [shape = record, label = "{Ph| {ph::}}"]
	Number [shape = record, label = "{Number}"]
	Signed [shape = record, label = "{Signed}"]
	Unsigned [shape = record, label = "{Unsigned}"]
	Integer [shape = record, label = "{Integer}"]
	Float [shape = record, label = "{Float}"]
	Convertible_to [shape = record, label = "{Convertible to}"]
	Assert [shape = record, label = "{Assert}"]
	Pointer [shape = record, label = "{Pointer}"]
	Reference [shape = record, label = "{Reference}"]


	// Typelist [shape = record, label = "{Typelist | {+ common [...] - T} | {+ transform [...]}}"]


	"Number" -> Assert [shape = record, label = "  imports"]
	"Number" -> "Signed" [shape = record, label = "  exports"]
	"Number" -> "Unsigned" [shape = record, label = "  exports"]
	"Number" -> "Integer" [shape = record, label = "  exports"]
	"Number" -> "Float" [shape = record, label = "  exports"]
	"Signed" -> Convertible_to [shape = record, label = "  imports"]
	"Signed" -> Assert [shape = record, label = "  imports"]
	"Unsigned" -> Convertible_to [shape = record, label = "  imports"]
	"Unsigned" -> Assert [shape = record, label = "  imports"]
	"Integer" -> Convertible_to [shape = record, label = "  imports"]
	"Integer" -> Assert [shape = record, label = "  imports"]
	"Float" -> Convertible_to [shape = record, label = "  imports"]
	"Float" -> Assert [shape = record, label = "  imports"]




	// "Ph" -> "Number" [label = "  exports"]
	// "Ph" -> "Assert" [label = "  exports"]

}


